<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="OutKuMapper">
	
	<!--表名 -->
	<sql id="tableName">
		ERP_OUTKU
	</sql>
	
	<!-- 字段 -->
	<sql id="Field">
		GOODS_ID,	
		INCOUNT,	
		PRICE,	
		ZPRICE,	
		OUTTIME,	
		GOODS_NAME,	
		USERNAME,
		INCOME,
		INPRICE,
		BZ,
		CUSTOMER,
		RECEIVER,
		BILL,
		SN,
		OUTKU_ID,
		BACKCOUNT,
		BACKPRICE,
		BACKALLPRICE
	</sql>
	
	<!-- 字段值 -->
	<sql id="FieldValue">
		#{GOODS_ID},	
		#{INCOUNT},	
		#{PRICE},	
		#{ZPRICE},	
		#{OUTTIME},	
		#{GOODS_NAME},	
		#{USERNAME},
		#{INCOME},
		#{INPRICE},
		#{BZ},
		#{CUSTOMER},	
		#{RECEIVER},		
		#{BILL},	
		#{SN},	
		#{OUTKU_ID},
		#{BACKCOUNT},
		#{BACKPRICE},
		#{BACKALLPRICE}
	</sql>
	
	<!-- 新增-->
	<insert id="save" parameterType="pd">
		insert into 
	<include refid="tableName"></include>
		(
	<include refid="Field"></include>
		) values (
	<include refid="FieldValue"></include>
		)
	</insert>
	
	<!-- 删除-->
	<delete id="delete" parameterType="pd">
		delete from
		<include refid="tableName"></include>
		where 
			OUTKU_ID = #{OUTKU_ID}
	</delete>
	
	<!-- 修改 -->
	<update id="edit" parameterType="pd">
		update
		<include refid="tableName"></include>
		set 
		OUTKU_ID = OUTKU_ID
		where 
		OUTKU_ID = #{OUTKU_ID}
	</update>
	
	<!-- 修改结算状态 -->
	<update id="editBill" parameterType="pd">
		update
		<include refid="tableName"></include>
		set 
		BILL = #{BILL}
		where 
		OUTKU_ID = #{OUTKU_ID}
	</update>
	
	<!-- 修改退货信息和利润信息 -->
	<update id="editBack" parameterType="pd">
		update
		<include refid="tableName"></include>
		set 
		BACKCOUNT = #{BACKCOUNT},
		BACKPRICE = #{BACKPRICE},
		BACKALLPRICE = #{BACKALLPRICE},
		INCOME = #{INCOME}
		where 
		OUTKU_ID = #{OUTKU_ID}
	</update>
	
	<!-- 通过ID获取数据 -->
	<select id="findById" parameterType="pd" resultType="pd">
		select 
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 
			OUTKU_ID = #{OUTKU_ID}
	</select>
	
	<!-- 列表 -->
	<select id="datalistPage" parameterType="page" resultType="pd">
		select
			a.GOODS_ID,	
			a.INCOUNT,	
			a.PRICE,	
			a.ZPRICE,	
			a.OUTTIME,	
			a.GOODS_NAME,	
			a.USERNAME,
			a.INCOME,
			a.INPRICE,
			a.BZ,
			a.CUSTOMER,
			a.RECEIVER,
			a.OUTKU_ID,
			a.BACKCOUNT,
			a.BACKPRICE,
			a.BACKALLPRICE,
			a.SN,
			b.REMARKS RECEIVERS,
			c.TITLE BILL
				
		from 
		<include refid="tableName"></include>a
		left join ERP_RECEIVER b
		on 
			a.RECEIVER = b.RECEIVER_ID
		left join ERP_LEVEL c
		on 
			a.BILL =c.LEVEL_ID
		where 1=1
		<if test="pd.keywords!= null and pd.keywords != ''"><!-- 关键词检索 -->
			and
				(
				 GOODS_NAME LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
				 or
				 CUSTOMER LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
				 or
				 SN LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
				)
		</if>
		<if test="pd.lastStart!=null and pd.lastStart!=''"><!-- 开始时间检索 -->
			and a.OUTTIME &gt;= #{pd.lastStart} 
		</if>
		<if test="pd.lastEnd!=null and pd.lastEnd!=''"><!-- 结束时间检索 -->
			and a.OUTTIME &lt;= #{pd.lastEnd} 
		</if>
		<if test="pd.RECEIVER!=null and pd.RECEIVER!=''">
			and a.RECEIVER = #{pd.RECEIVER} 
		</if>
		<if test="pd.BILL!=null and pd.BILL!=''">
			and a.BILL = #{pd.BILL} 
		</if>
		and
			a.USERNAME = #{pd.USERNAME}
		order by a.OUTTIME desc
	</select>
	
	<!-- 总金额 -->
	<select id="priceSum" parameterType="pd" resultType="pd">
		select
			sum(ZPRICE) ZPRICE
		from 
		<include refid="tableName"></include>
		where 1=1
		<if test="keywords!= null and keywords != ''"><!-- 关键词检索 -->
			and
				(
				 GOODS_NAME LIKE CONCAT(CONCAT('%', #{keywords}),'%')
				)
		</if>
		<if test="lastStart!=null and lastStart!=''"><!-- 开始时间检索 -->
			and OUTTIME &gt;= #{lastStart} 
		</if>
		<if test="lastEnd!=null and lastEnd!=''"><!-- 结束时间检索 -->
			and OUTTIME &lt;= #{lastEnd} 
		</if>
		<if test="onemonth!=null and onemonth!=''"><!-- 某一月检索 -->
			and OUTTIME like CONCAT(#{onemonth},'%')
		</if>
		<if test="days!=null and days!=''"><!-- 几天内 -->
			and DATE_SUB(CURDATE(), INTERVAL ${days} DAY) &lt;= date(OUTTIME)
		</if>
		<if test="RECEIVER!=null and RECEIVER!=''">
			and RECEIVER = #{RECEIVER} 
		</if>
		<if test="BILL!=null and BILL!=''">
			and BILL = #{BILL} 
		</if>
		and
			USERNAME = #{USERNAME}
	</select>
	
	<!-- 列表(全部) -->
	<select id="listAll" parameterType="pd" resultType="pd">
		select
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where
			USERNAME = #{USERNAME}
	</select>
	
	<!-- 商品销售报表-->
	<select id="SalesReportlistPage" parameterType="page" resultType="pd">
		select
			 GOODS_NAME,
			 SN,
			 sum(INCOUNT) ZCOUNT,
			 sum(ZPRICE) ZPRICE,
			 sum(INCOME) ZINCOME,
			 sum(INPRICE) ZINPRICE,
			 sum(BACKCOUNT) 	ZBACKCOUNT,
			 sum(BACKALLPRICE) ZBACKALLPRICE
			 
		from 
		<include refid="tableName"></include>
		where 1=1
		<if test="pd.keywords!= null and pd.keywords != ''"><!-- 关键词检索 -->
			and
				(
					GOODS_NAME LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
				)
		</if>
		<if test="pd.lastStart!=null and pd.lastStart!=''"><!-- 开始时间检索 -->
			and OUTTIME &gt;= #{pd.lastStart} 
		</if>
		<if test="pd.lastEnd!=null and pd.lastEnd!=''"><!-- 结束时间检索 -->
			and OUTTIME &lt;= #{pd.lastEnd} 
		</if>
		<if test="pd.days!=null and pd.days!=''"><!-- 几天内的订单 -->
           <choose>
                <when test="pd.days == 1">
                  and to_days(OUTTIME) = to_days(now())
                </when>
                <otherwise>
                   and DATE_SUB(CURDATE(), INTERVAL ${pd.days} DAY) &lt;= date(OUTTIME)
                </otherwise>
            </choose>
			 
			
		</if>
		and
			  USERNAME = #{pd.USERNAME}
		GROUP BY GOODS_ID
		<if test="pd.forderby!=null and pd.forderby!=''"><!-- 排序 -->
			${pd.forderby}
		</if>
	</select>

<!-- 商品销售图表-->
		<select id="go" parameterType="pd" resultType="pd">
		select
			 count(*) NUMBER,
			 sum(BACKCOUNT) ZBACKCOUNT,
			 sum(BACKALLPRICE) ZBACKALLPRICE,
			 sum(INCOUNT) ZCOUNT,
			 sum(ZPRICE) ZPRICE,
			 sum(INCOME) ZINCOME,
			 sum(INPRICE) ZINPRICE
		from 
		<include refid="tableName"></include> a
		where a.USERNAME = #{USERNAME}		
		<if test="days!=null and days!=''"><!-- 几天内的订单 -->
           <choose>
                <when test="days == 1">
                  and to_days(OUTTIME) = to_days(now())
                </when>
                <otherwise>
                   and DATE_SUB(CURDATE(), INTERVAL ${days} DAY) &lt;= date(a.OUTTIME)
                </otherwise>
            </choose>			
		</if>
	</select>
	
	<!-- 商品销售图表-当月-->
		<select id="thisMonth" parameterType="pd" resultType="pd">
		select
			 count(*) NUMBER,
			 sum(BACKCOUNT) ZBACKCOUNT,
			 sum(BACKALLPRICE) ZBACKALLPRICE,
			 sum(INCOUNT) ZCOUNT,
			 sum(ZPRICE) ZPRICE,
			 sum(INCOME) ZINCOME,
			 sum(INPRICE) ZINPRICE
		from 
		<include refid="tableName"></include> a
		where a.USERNAME = #{USERNAME}		
		and date_format(a.OUTTIME,'%Y-%m')=date_format(now(),'%Y-%m') 
	</select>
	
		<!-- 商品销售图表-上月-->
		<select id="lastMonth" parameterType="pd" resultType="pd">
		select
			 count(*) NUMBER,
			 sum(BACKCOUNT) ZBACKCOUNT,
			 sum(BACKALLPRICE) ZBACKALLPRICE,
			 sum(INCOUNT) ZCOUNT,
			 sum(ZPRICE) ZPRICE,
			 sum(INCOME) ZINCOME,
			 sum(INPRICE) ZINPRICE
		from 
		<include refid="tableName"></include> a
		where a.USERNAME = #{USERNAME}		
		and PERIOD_DIFF( date_format( now( ) , '%Y%m' ) , date_format(a.OUTTIME, '%Y%m' ) ) =1
	</select>
	
	
	
	<!-- 批量删除 -->
	<delete id="deleteAll" parameterType="String">
		delete from
		<include refid="tableName"></include>
		where 
			OUTKU_ID in
		<foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                 #{item}
		</foreach>
	</delete>
	
	<!-- fh313596790qq(青苔) -->
</mapper>